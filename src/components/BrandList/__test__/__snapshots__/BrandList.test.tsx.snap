// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BrandList should match snapshot 1`] = `
[
  <Text
    style={
      {
        "fontSize": 13,
        "fontWeight": "500",
        "marginBottom": 15,
        "marginLeft": 15,
      }
    }
  >
    navigation:home:shopByBrands
  </Text>,
  <View>
    <RCTScrollView
      ItemSeparatorComponent={
        {
          "$$typeof": Symbol(react.memo),
          "compare": null,
          "type": [Function],
        }
      }
      contentContainerStyle={
        {
          "paddingHorizontal": 15,
        }
      }
      data={
        [
          {
            "id": 1,
            "name": "Brand 1",
          },
          {
            "id": 2,
            "name": "Brand 2",
          },
          {
            "id": 3,
            "name": "Brand 3",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "backgroundColor": "#efefef",
                "borderRadius": 5,
                "opacity": 1,
                "padding": 10,
              }
            }
            testID="brand-item"
          >
            <Text
              style={
                {
                  "color": "#000000",
                }
              }
            >
              Brand 1
            </Text>
          </View>
          <View
            style={
              {
                "width": 15,
              }
            }
            testID="list-item-separator"
          />
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "backgroundColor": "#efefef",
                "borderRadius": 5,
                "opacity": 1,
                "padding": 10,
              }
            }
            testID="brand-item"
          >
            <Text
              style={
                {
                  "color": "#000000",
                }
              }
            >
              Brand 2
            </Text>
          </View>
          <View
            style={
              {
                "width": 15,
              }
            }
            testID="list-item-separator"
          />
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "backgroundColor": "#efefef",
                "borderRadius": 5,
                "opacity": 1,
                "padding": 10,
              }
            }
            testID="brand-item"
          >
            <Text
              style={
                {
                  "color": "#000000",
                }
              }
            >
              Brand 3
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>,
]
`;
